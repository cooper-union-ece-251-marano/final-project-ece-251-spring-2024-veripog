00000000: addi $1, $0, 0       # Initialize $1 to 0 (Fibonacci(0)) -> 20010000
00000004: addi $2, $0, 1       # Initialize $2 to 1 (Fibonacci(1)) -> 20020001
00000008: addi $3, $0, 2       # Initialize $3 to 2 (counter starts at 2) -> 20030002
0000000c: addi $4, $0, 8       # Initialize $4 to 7 (target Fibonacci index) -> 20040008
00000010: beq  $3, $4, finish  # If counter ($3) equals 7, exit the loop -> 10640005
00000014: add  $5, $1, $2      # $5 = $1 + $2 (next Fibonacci number) -> 00222820
00000018: add  $1, $0, $2      # $1 = $2 (update $1 for the next iteration) -> 00020820
0000001c: add  $2, $0, $5      # $2 = $5 (update $2 for the next iteration) -> 00051020
00000020: addi $3, $3, 1       # Increment counter ($3) -> 20630001
00000024: j    loop            # Repeat the loop -> 08000004
00000028: sw   $2, 0($0)       # Store the 7th Fibonacci number in memory address 0 -> ac020000
0000002c: j    end             # Loop forever (end of program) -> 0800000b
